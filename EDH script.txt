10.0.24.0/24
10.0.6.0/24
10.0.1.0/24
10.0.0.0/24

CIDRs  for vpc

https://docs.aws.amazon.com/cli/latest/userguide/installing.html

⁃	python --version

curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
   
unzip awscli-bundle.zip

sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws

sudo aws -b  /usr/local/bin/aws

sudo python awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
     
 
For windows       https://www.python.org/ftp/python/3.7.2/python-3.7.2-amd64.exe
 python --version 
 pip3 install awscli
python -m pip install --upgrade pip


⁃	aws --version 

⁃	aws configure (us-east-1)

aws ec2 describe-regions

aws ec2 describe-instances 

aws ec2 describe-instances | grep InstanceId

⁃	aws ec2 run-instances --image-id ami-0390b7fa479131c5f  --count 1 --instance-type m4.large --key-name security --security-group-ids sg-01dfc4bcd82b8c91c --subnet-id subnet-079fd8e587ba7cc83

Please Subscribe to CentOS 7.5 (x86_64) image - ami-9887c6e7  - with Updates HVM, Enhanced Network Enabled, 
Or use version 6 image ami-1585c46a
When you are making the AMI use root account by typing sudo su                                   

sudo cp /home/centos/.ssh/authorized_keys  /root/.ssh/
	
echo ec2-18-212-112-224.compute-1.amazonaws.com > launcher

ssh -i security.pem centos@`cat launcher`

ssh -i "security.pem" centos@ec2-123-345-122-241.compute-1.amazonaws.com

sudo yum install wget -y

sudo yum install nano -y (if you will)

# install JDK

wget https://s3.amazonaws.com/cloud-age/jdk-8u162-linux-x64.rpm


sudo rpm -Uv jdk-8u162-linux-x64.rpm


#check Prerequesites

wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/check-pre-req.sh


# Run all Prerequesites by typing ./filename             or                 sh filename

wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/disable_iptables.sh

wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/disable_ipv6.sh

wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/disable_selinux.sh

wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/disable_thp.sh

wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/install_lzo.sh

wget  https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/install_nscd.sh
https://access.redhat.com/solutions/1489

wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/install_ntp.sh

wget  https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/install_tools.sh

wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/remove_tuned.sh

wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/tune_kernel.sh

sysctl vm.swappiness=1 

#set swappiness
 sudo sysctl -a | grep vm.swappiness sudo su -c ‘cat >>/etc/sysctl.conf <<EOL
‘vm.swappiness=1’
EOL’
sudo sysctl -p

#check Prerequesites again

 sudo sh check-pre-req.sh


Do Not worry about the dns message, due to the hostname is controlled by aws,
 restart the machine, in some datacenter issue may resolve.

Create Snapshot & AMI at this point.


# save this image in your AMI ———you - will - not be able to make it public, use the ami-ID in 

aws.simple.conf


# Run Cloudera Director Script.


wget https://s3.amazonaws.com/cloud-age/MIT_kerberos/prerequisite/install_clouderadirector.sh

sh install_clouderadirector.sh

service cloudera-director-server status

# Check the path : cd /usr/lib64/cloudera-director/client

download the file aws.simple.conf

scp -i security.pem centos@`cat launcher`:/usr/lib64/cloudera-director/client/aws.simple.conf ./

⁃	Configure and rename aws.simple.conf to cluster.conf


.\pscp.exe -i .\security.ppk .\launch-cluster.sh centos@10.0.0.177:/home/centos

.\pscp.exe -i .\security.ppk .\cluster.conf centos@10.0.0.177:/home/centos

.\pscp.exe -i .\security.ppk .\security.pem centos@10.0.0.177:/home/centos

Option #1 Gui in the browser     ec2-54-175-122-241.compute-1.amazonaws.com:7189.   (recommended by Cloudera)

Option #2 CLI in the Terminal configure aws.simple.conf and fire prelaunch.sh

https://s3.amazonaws.com/cloud-age/MIT_kerberos/putnmove.sh

https://s3.amazonaws.com/cloud-age/MIT_kerberos/prelaunch.sh

https://s3.amazonaws.com/cloud-age/MIT_kerberos/clustercmd.sh

https://s3.amazonaws.com/cloud-age/MIT_kerberos/launch-cluster.sh

https://s3.amazonaws.com/cloud-age/MIT_kerberos/Notes_For_Security


sudo cloudera-director status cluster.conf

creating a tunnel

ssh -i "oregonkeycloudformation.pem" -L 7189:localhost:7189 ec2-user@100.20.151.167
cloudera-director bootstrap aws.simple.conf
cloudera-director status aws.simple.conf
_____________++++++++++++++++++++++++++_______________________________________________________++++++++++++++++++++++++++++++++++++++++

This is to create Local Repository.



    sudo yum install httpd -y
    sudo chkconfig httpd on
    sudo service httpd status
    sudo service httpd start
    
     wget --no-check-certificate https://archive.cloudera.com/cm5/repo-as-tarball/5.4.5/cm5.4.5-centos6.tar.gz


    sudo tar -zxvf cm5.4.5-centos6.tar.gz -C /var/www/html/
     

     sudo nano /etc/yum.repos.d/cloudera-manager.repo


[cloudera-manager]
name=cloudera manager
baseurl=http://10.0.1.37/cm/5.4.5/
gpgcheck = 1
gpgkey =http://10.0.1.37/cm/RPM-GPG-KEY-cloudera


:wq



     cat /etc/yum.repos.d/cloudera-manager.repo


     sudo mv /var/www/html/cm/cloudera-manager.repo  /var/www/html/cm/cloudera-manager.repo.save     
     sudo cp /etc/yum.repos.d/cloudera-manager.repo    /var/www/html/cm/cloudera-manager.repo
    
     sudo yum clean all


     sudo yum repolist all

   	 ssh-keygen 
    cat  ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
     ssh localhost

    wget --no-check-certificate https://archive.cloudera.com/cm5/installer/5.4.5/cloudera-manager-installer.bin
    
	chmod +x cloudera-manager-installer.bin

    sudo ./cloudera-manager-installer.bin --skip_repo_package=1

   sudo service cloudera-scm-server status

   sudo su

   cd
Centos AMI version 6

Access via SSH to the instance and run sudo fdisk /dev/xvda
press c
press u
press p to show current partitions
press d to delete current partitions NOTE: data is not lost, since it is a Das
press n to create a new partition
press p to set it as primary
press 1 to set the first cylinder
Press enter (Set the desired new space,if empty the whole space is reserved)
press a to make it bootable
press 1 and w to write changes
Reboot instance


